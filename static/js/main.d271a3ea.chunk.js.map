{"version":3,"sources":["counter/Counter.js","redux/actions.js","redux/reducers.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["containerStyle","display","buttonStyle","fontSize","width","height","Counter","state","number","addOne","props","dispatch","type","minusOne","className","this","style","onClick","Component","connect","ADD_ONE","MINUS_ONE","initialState","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAIMA,EAAiB,CACnBC,QAAS,QAGPC,EAAc,CAChBC,SAAU,SACVC,MAAO,OACPC,OAAQ,QAGNC,E,4MAEFC,MAAQ,CAAEC,OAAQ,G,EAGlBC,OAAS,WACP,EAAKC,MAAMC,SAAS,CAACC,KAAO,a,EAG9BC,SAAW,WACP,EAAKH,MAAMC,SAAS,CAAEC,KAAM,e,4CAIhC,WACI,OACI,qBAAKE,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,mCAAMC,KAAKL,MAAMF,OAAjB,OACA,sBAAKQ,MAAOhB,EAAZ,UACI,wBAAQY,KAAK,SAASI,MAAOd,EAAae,QAASF,KAAKF,SAAxD,iBACA,wBAAQD,KAAK,SAASI,MAAOd,EAAae,QAASF,KAAKN,OAAxD,6B,GArBFS,aAoCPC,eANS,SAACZ,GACrB,MAAO,CACLC,OAAQD,EAAMC,UAILW,CAAyBb,G,QClD3Bc,EAAU,UACVC,EAAY,YCCnBC,EAAe,CACjBd,OAAQ,GAeGe,MAZf,WAAgD,IAA/BhB,EAA8B,uDAAtBe,EAAcE,EAAQ,uCAC3C,OAAQA,EAAOZ,MACX,KAAKQ,EACD,MAAO,CAAEZ,OAAQD,EAAMC,OAAS,GAEpC,KAAKa,EACD,MAAO,CAAEb,OAAQD,EAAMC,OAAS,GAEpC,QACI,OAAOD,ICRJkB,EAFDC,YAAYH,EAASI,OAAOC,8BAAgCD,OAAOC,gCCQlEC,MARf,WACE,OACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,OCISK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d271a3ea.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nconst containerStyle = {\r\n    display: 'flex'\r\n}\r\n\r\nconst buttonStyle = {\r\n    fontSize: '1.5rem',\r\n    width: '40px',\r\n    height: '40px'\r\n}\r\n\r\nclass Counter extends Component {\r\n\r\n    state = { number: 0 }\r\n\r\n\r\n    addOne = () => {\r\n      this.props.dispatch({type : 'ADD_ONE'})\r\n    }\r\n\r\n    minusOne = () => {\r\n        this.props.dispatch({ type: 'MINUS_ONE' });\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1> {this.props.number} </h1>\r\n                    <div style={containerStyle}>\r\n                        <button type=\"button\" style={buttonStyle} onClick={this.minusOne} > - </button>\r\n                        <button type=\"button\" style={buttonStyle} onClick={this.addOne}> + </button>\r\n                    </div>\r\n                </header>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      number: state.number\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Counter);","export const ADD_ONE = 'ADD_ONE'\r\nexport const MINUS_ONE = 'MINUS_ONE'\r\n\r\n","import { ADD_ONE, MINUS_ONE } from \"./actions\";\r\n\r\nconst initialState = {\r\n    number: 1,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_ONE:\r\n            return { number: state.number + 1 };\r\n\r\n        case MINUS_ONE:\r\n            return { number: state.number - 1 };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;\r\n","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\n\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import './App.css';\nimport Counter from './counter/Counter';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Counter></Counter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}